ml () {  module ml "$@"
}
module () {  _module_raw "$@" 2>&1
}
_module_raw () {  eval `/usr/bin/tclsh8.6 /usr/lib/x86_64-linux-gnu/modulecmd.tcl bash "$@"`;
 _mlstatus=$?;
 return $_mlstatus
}
# !/bin/bash
#
# testing.sh -- testing file for dealer
#
# usage: bash -v testing.sh &> testing.out 
#
# Team 12, CS50, Fall 2022

# Make player output file
rm -rf player.out ; touch player.out

# Making everything
cd .. ; make clean ; make ; cd dealer
make[1]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'
rm -f *~
rm -f TAGS
make -C utils clean
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
rm -rf core
rm -rf utils.a *.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
make -C player clean
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
rm -rf *.dSYM  # MacOS debugger info
rm -f *~ *.o
rm -f player
rm -f core
rm -f player.o ../cards/cards.o ../network/network.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
make -C dealer clean
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
rm -rf *.dSYM  # MacOS debugger info
rm -f *~ *.o
rm -f dealer
rm -f ncdealer
rm -f data/*
rm -f core
rm -f dealer.o ../cards/cards.o ../network/network.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
make -C cards clean
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
rm -rf *.dSYM  # MacOS debugger info
rm -f *~ *.o
rm -f cards.a
rm -f cardtest
rm -f core
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
make -C network clean
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
rm -f core
rm -f *.a *~ *.o *.out network dealer player
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
make[1]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'
make[1]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'
make -C utils
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
cc    -c -o mem.o mem.c
cc    -c -o file.o file.c
cc    -c -o bag.o bag.c
ar cr utils.a mem.o file.o bag.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
make -C network
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
gcc -Wall -pedantic -std=c11 -ggdb    -c -o network.o network.c
ar cr network.a network.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
make -C cards
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
gcc -Wall -pedantic -std=c11 -ggdb -I../utils   -c -o cards.o cards.c
ar cr cards.a cards.o ../utils/mem.o ../utils/bag.o 
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
make -C player
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
gcc -Wall -pedantic -std=c11 -ggdb  -I../utils     -c -o player.o player.c
gcc -Wall -pedantic -std=c11 -ggdb  -I../utils   player.o ../cards/cards.o ../network/network.o ../utils/utils.a ../utils/utils.a -o player
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
make -C dealer
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
gcc -Wall -pedantic -std=c11 -ggdb -DTRAIN -I../utils    -c -o dealer.o dealer.c
gcc -Wall -pedantic -std=c11 -ggdb -DTRAIN -I../utils  dealer.o ../cards/cards.o ../network/network.o ../utils/utils.a ../utils/utils.a -o dealer
gcc -Wall -pedantic -std=c11 -ggdb -DTRAIN -I../utils    -c -o ncdealer.o ncdealer.c
gcc -Wall -pedantic -std=c11 -ggdb -DTRAIN -I../utils  ncdealer.o ../cards/cards.o ../network/network.o ../utils/utils.a ../utils/utils.a -lncurses -o ncdealer
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
make[1]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'

# Testing with no arguments
./dealer
usage: ./dealer <number of games> <port>
# Check error code
echo $?
1

# Testing with one arguments
./dealer Team12
usage: ./dealer <number of games> <port>
# Check error code
echo $?
1

# Testing with too many arguments
./dealer Team12 Ipaddress bad
usage: ./dealer <number of games> <port>
# Check error code
echo $?
1

# Testing with bad port
./dealer 1 port
Incorrect usage. Port must be an integer.
# Check error code
echo $?
4

# Testing with bad port
./dealer 1 0
Incorrect usage. Port is invalid.
# Check error code
echo $?
5

# Testing with non-int number of games
./dealer one 8092
Incorrect usage. Number of games must be an integer.
# Check error code
echo $?
2

# Testing with 0 number of games
./dealer 0 8092
Incorrect usage. Number of games must be at least 1.
# Check error code
echo $?
3

# Testing with player
valgrind ./dealer 50 8092 &

IPADDR=$(curl ifconfig.me)
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0==2846764== Memcheck, a memory error detector
==2846764== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2846764== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2846764== Command: ./dealer 50 8092
==2846764== 
100    14  100    14    0     0    243      0 --:--:-- --:--:-- --:--:--   245

cd ../player ; ./player Name $IPADDR 8092 > player.out 2>&1 & 

# Check status code
echo $?
0

