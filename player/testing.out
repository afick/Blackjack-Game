ml () {  module ml "$@"
}
module () {  _module_raw "$@" 2>&1
}
_module_raw () {  eval `/usr/bin/tclsh8.6 /usr/lib/x86_64-linux-gnu/modulecmd.tcl bash "$@"`;
 _mlstatus=$?;
 return $_mlstatus
}
# !/bin/bash
#
# testing.sh -- testing file for player
#
# usage: bash -v testing.sh &> testing.out 
#
# input: 
# output: 
#
# Team 12, CS50, Fall 2022

# Make dealer output file
rm -rf dealer.out ; touch dealer.out

# Making everything
cd .. ; make ; cd player
make[1]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'
make -C utils
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
make[2]: 'utils.a' is up to date.
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/utils'
make -C network
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
ar cr network.a network.o
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/network'
make -C cards
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
ar cr cards.a cards.o ../utils/mem.o ../utils/bag.o 
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/cards'
make -C player
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/player'
make -C dealer
make[2]: Entering directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12/dealer'
make[1]: Leaving directory '/thayerfs/home/f005cqk/cs50/labs/project-team-12'

# Testing with no arguments
./player
Not enough arguments. Usage: player <player name> <server’s IP address> <PORT number>

# Testing with one arguments
./player Team12
Not enough arguments. Usage: player <player name> <server’s IP address> <PORT number>

# Testing with two arguments
./player Team12 Ipaddress
Not enough arguments. Usage: player <player name> <server’s IP address> <PORT number>

# Testing with too many arguments
./player Team12 Ipaddress bad bad
Not enough arguments. Usage: player <player name> <server’s IP address> <PORT number>

# Testing with bad port
./player whatevername whateverip 0
PORT passed is invalid

# Testing with dealer
cd ../dealer ; ./dealer 10 8092 > dealer.out 2>&1 & 

IPADDR=$(curl ifconfig.me)
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    14  100    14    0     0    252      0 --:--:-- --:--:-- --:--:--   254

echo $IPADDR
129.170.65.170

cd ../player ; ./player Name $IPADDR 8092
Training Match Result: RESULT WIN
Training Match Result: RESULT BUST
Training Match Result: RESULT WIN
Training Match Result: RESULT BUST
Training Match Result: RESULT BUST
Training Match Result: RESULT LOOSE
Training Match Result: RESULT WIN
Training Match Result: RESULT PUSH
Training Match Result: RESULT BUST
Training Match Result: RESULT LOOSE

